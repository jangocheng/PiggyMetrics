// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: services/notification.proto
#region Designer generated code

using System; 
using System.Threading.Tasks; 
using DotBPE.Rpc; 
using DotBPE.Protocol.Amp; 
using Google.Protobuf; 

namespace PiggyMetrics.Common {

//start for class AbstractNotificationService
public abstract class NotificationServiceBase : ServiceActorBase 
{
public override string Id => "1005$0";
//调用委托
private async Task ReceiveUpdateStatisticsAsync(IRpcContext<AmpMessage> context, AmpMessage req)
{
var request = Account.Parser.ParseFrom(req.Data);
var data = await UpdateStatisticsAsync(request);
var response = AmpMessage.CreateResponseMessage(req.ServiceId, req.MessageId);
response.Sequence = req.Sequence;
response.Data = data.ToByteArray();
await context.SendAsync(response);
}

//抽象方法
public abstract Task<VoidRsp> UpdateStatisticsAsync(Account request);
public override Task ReceiveAsync(IRpcContext<AmpMessage> context, AmpMessage req)
{
switch(req.MessageId){
//方法NotificationService.UpdateStatistics
case 1: return this.ReceiveUpdateStatisticsAsync(context, req);
default: return base.ReceiveNoFonundAsync(context, req);
}
}
}
//end for class AbstractNotificationService
}

#endregion

